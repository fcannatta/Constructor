# ============================================
# CONFIGURA√á√ÉO GLOBAL DO SISTEMA DE BUILD
# Vers√£o do motor: 1.1
# Data: $(date +%Y-%m-%d)
# ============================================


# =========================================================
# üîπ 1. DIRET√ìRIOS PRINCIPAIS
# =========================================================
ROOT_DIR="/opt/buildsystem"

SRC_DIR="$ROOT_DIR/sources"        # Tarballs originais
BUILD_DIR="$ROOT_DIR/build"        # Diret√≥rios tempor√°rios de build
LOG_DIR="$ROOT_DIR/logs"           # Logs por pacote e globais
OUTPUT_DIR="$ROOT_DIR/output"      # Pacotes finais (.tar.xz)
TOOLCHAIN_DIR="$ROOT_DIR/toolchain"# Toolchain m√≠nima (bootstrap)
DB_DIR="/var/lib/pkgdb"            # Banco de pacotes instalados
HOOKS_DIR="/hooks"                 # Hooks pr√©/p√≥s-build/update


# =========================================================
# üîπ 2. AMBIENTE E ARQUITETURA
# =========================================================
ARCH="x86_64"
JOBS="$(nproc)"         # N√∫mero de threads paralelas
LANG="C"
LC_ALL="C"


# =========================================================
# üîπ 3. FLAGS GLOBAIS DE COMPILA√á√ÉO
# =========================================================
CFLAGS="-O2 -pipe -fPIC"
CXXFLAGS="-O2 -pipe -fPIC"
LDFLAGS="-Wl,-O1 -Wl,--as-needed"
MAKEFLAGS="-j${JOBS}"


# =========================================================
# üîπ 4. POL√çTICAS DE EXECU√á√ÉO E REEXECU√á√ÉO
# =========================================================
RETRY_COUNT=3            # Quantas vezes reexecutar em falha de rede
AUTO_RETRY="yes"         # Tentar novamente automaticamente
CONTINUE_ON_FAIL="no"    # Interrompe na primeira falha cr√≠tica
CLEAN_BEFORE_BUILD="no"  # Limpa diret√≥rio antes de rebuild
SAVE_LOGS="yes"          # Sempre manter logs individuais


# =========================================================
# üîπ 5. FONTES DE PACOTES E REPOSIT√ìRIOS GIT
# =========================================================
# Reposit√≥rio Git que cont√©m os pacotes (.desc, patches, etc)
PKG_REPO_GIT="https://github.com/SEU_USUARIO/seu-repo-pacotes.git"
PKG_REPO_BRANCH="main"
PKG_REPO_LOCAL="$ROOT_DIR/package"   # Pasta onde ser√° clonado/sincronizado

# (Opcional) Reposit√≥rio Git com pacotes bin√°rios prontos
BIN_REPO_GIT="https://github.com/SEU_USUARIO/seu-repo-binarios.git"
BIN_REPO_BRANCH="main"
BIN_REPO_LOCAL="$ROOT_DIR/binaries"

# Pol√≠tica de sincroniza√ß√£o autom√°tica
AUTO_SYNC_PKG_REPO="yes"   # Se "yes", o controller far√° git pull antes dos builds
AUTO_SYNC_BIN_REPO="no"    # Ative se quiser atualizar pacotes bin√°rios tamb√©m


# =========================================================
# üîπ 6. MIRRORS GLOBAIS (FONTES ALTERNATIVAS DE DOWNLOAD)
# =========================================================
# Usados como fallback se a URL original de um pacote falhar
MIRRORS=(
  "https://ftp.gnu.org/gnu"
  "https://ftp.mozilla.org/pub"
  "https://download.kde.org/stable"
  "https://github.com"
)
TIMEOUT=30   # Timeout de download em segundos


# =========================================================
# üîπ 7. DEPEND√äNCIAS E LISTA DE PACOTES
# =========================================================
PKG_LIST="$ROOT_DIR/package-list.txt"  # Lista principal de pacotes a construir
DEPSOLVE_MODE="strict"                 # strict = todas depend√™ncias resolvidas
ALLOW_OPTIONAL_DEPS="yes"              # Inclui depend√™ncias opcionais (flags)


# =========================================================
# üîπ 8. POL√çTICAS DE ATUALIZA√á√ÉO
# =========================================================
UPDATE_POLICY="major_only"     # Atualiza apenas vers√µes principais
ALLOW_BETA="no"                # Ignora vers√µes beta/rc
AUTO_BACKUP_DESC="yes"         # Cria backup autom√°tico do .desc anterior
ROLLBACK_ENABLED="yes"         # Permite rollback em falhas de update


# =========================================================
# üîπ 9. FERRAMENTAS OBRIGAT√ìRIAS DO HOST
# =========================================================
REQUIRED_TOOLS=(
  gcc make bash tar xz curl git sha256sum gpg
)


# =========================================================
# üîπ 10. LOGS E RELAT√ìRIOS
# =========================================================
MASTER_LOG="$LOG_DIR/build-master.log"
SUMMARY_JSON="$LOG_DIR/build-summary.json"
LOG_FORMAT="text"       # text | json


# =========================================================
# üîπ 11. HOOKS DE EVENTOS
# =========================================================
ENABLE_HOOKS="yes"
HOOKS_PRE_BUILD="$HOOKS_DIR/pre-build"
HOOKS_POST_INSTALL="$HOOKS_DIR/post-install"
HOOKS_POST_UPDATE="$HOOKS_DIR/post-update"


# =========================================================
# üîπ 12. SEGURAN√áA E ASSINATURAS
# =========================================================
VERIFY_SIGNATURES="yes"
GPG_KEYRING="$ROOT_DIR/keys/pubring.gpg"


# =========================================================
# üîπ 13. RELAT√ìRIO FINAL
# =========================================================
REPORT_FORMAT="text"                   # text | json
REPORT_PATH="$LOG_DIR/final-report.txt"


# =========================================================
# üîπ 14. VARI√ÅVEIS DERIVADAS (geradas em runtime)
# =========================================================
DATE_NOW="$(date +%Y-%m-%d_%H-%M)"
HOSTNAME="$(hostname)"
